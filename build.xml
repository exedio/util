<?xml version="1.0"?>

<project name="cope util" default="build" basedir="."
			xmlns:jacoco="antlib:org.jacoco.ant">

	<property file="local.properties" />
	<property file="project.properties" />

	<import>
		<fileset dir="macros">
			<include name="*.xml" />
		</fileset>
	</import>

	<target name="compile">
		<compile srcdir="src">
			<classpath>
				<pathelement location="lib/slf4j-api.jar" />
				<pathelement location="lib/findbugs-annotations.jar" />
			</classpath>
		</compile>
	</target>

	<target name="test.compile" depends="compile">
		<compile srcdir="testsrc">
			<classpath>
				<pathelement location="build/classes/src" />
				<pathelement location="lib/findbugs-annotations.jar" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="lib/cpsuite.jar" />
				<pathelement location="lib/easymock.jar" />
			</classpath>
		</compile>
	</target>

	<target name="test.run" depends="test.compile">
		<runtest name="moscow"  userTimezone="Europe/Moscow" />
		<runtest name="berlin"  userTimezone="Europe/Berlin" />
		<runtest name="canada"  userTimezone="Canada/Mountain" />
		<runtest name="pacific" userTimezone="Pacific/Kiritimati" />
	</target>

	<macrodef name="runtest">
		<attribute name="name" />
		<attribute name="userTimezone" />
		<sequential>
		<mkdir dir="build/testresults" />
		<mkdir dir="build/testtmpdir" />
		<junit fork="yes"
				 haltonerror="true" haltonfailure="true"
				 showoutput="true" printsummary="true">
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			<classpath>
				<pathelement location="build/classes/src" />
				<pathelement location="build/classes/testsrc" />
				<pathelement location="lib/slf4j-api.jar" />
				<pathelement location="lib/logback-core.jar" />
				<pathelement location="lib/logback-classic.jar" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="lib/cpsuite.jar" />
				<pathelement location="lib/easymock.jar" />
				<pathelement location="lib/cglib-nodep.jar" />
			</classpath>
			<sysproperty key="java.io.tmpdir" value="${basedir}/build/testtmpdir" />
			<sysproperty key="user.timezone" value="@{userTimezone}" />
			<test name="com.exedio.cope.util.AllTests" todir="build/testresults" outfile="cope-util-@{name}" />
			<assertions><enable/></assertions>
			<!--jvmarg value="-Xcomp" /--><!-- for performance tests -->
		</junit>
		</sequential>
	</macrodef>

	<target name="test" depends="test.run" />

	<target name="jar" depends="compile">
		<jar jarfile="build/exedio-cope-util.jar" basedir="build/classes/src" filesonly="true" duplicate="fail" strict="fail" level="9">
			<manifest>
				<attribute name="Specification-Title" value="exedio cope util"/>
				<attribute name="Specification-Version" value="${build.tag}"/>
				<attribute name="Specification-Vendor" value="exedio GmbH"/>
				<attribute name="Implementation-Title" value="exedio cope util"/>
				<attribute name="Implementation-Version" value="${build.tag}"/>
				<attribute name="Implementation-Vendor" value="exedio GmbH"/>
			</manifest>
		</jar>
		<plot file="build/exedio-cope-util.jar" />
	</target>

	<target name="jar.src">
		<mkdir dir="build" />
		<zip destfile="build/exedio-cope-util-src.zip" filesonly="true" whenempty="fail" duplicate="fail" level="9">
			<zipfileset dir="${basedir}/src">
				<include name="**/*.java" />
			</zipfileset>
		</zip>
	</target>

	<target name="clean">
		<delete dir="build" />
		<delete dir="api" /><!-- not created anymore-->
	</target>

	<target name="api">
		<api title="cope util">
			<src>
				<fileset file="src/com" includes="**/*.java" />
			</src>
			<myClasspath>
				<pathelement location="lib/slf4j-api.jar" />
				<pathelement location="lib/findbugs-annotations.jar" />
			</myClasspath>
		</api>
	</target>

	<target name="findbugs" depends="compile, test.compile, findbugs.taskdef">
		<findbugs
					home="${basedir}/build/findbugs-home"
					jvmargs="-Xmx250M"
					failOnError="true"
					warningsProperty="findbugs.warnings"
					output="${findbugs.output}"
					outputFile="${basedir}/build/findbugs.${findbugs.output}"
					effort="max"
					reportlevel="low">
			<class location="${basedir}/build/classes/src" />
			<class location="${basedir}/build/classes/testsrc" />
			<auxclasspath>
				<pathelement location="${basedir}/lib/slf4j-api.jar" />
				<pathelement location="${basedir}/lib/junit.jar" />
				<pathelement location="${basedir}/lib/easymock.jar" />
			</auxclasspath>
		</findbugs>
	</target>


	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="lib/org.jacoco.ant.jar"/>
		<classpath path="lib/org.jacoco.agent.jar"/>
		<classpath path="lib/org.jacoco.report.jar"/>
		<classpath path="lib/org.jacoco.core.jar"/>
		<classpath path="lib/asm-debug-all.jar"/>
	</taskdef>

	<target name="jacoco" depends="test.compile" unless="skip.jacoco">
		<mkdir dir="build/jacocotestresults" />
		<mkdir dir="build/jacocotesttmpdir" />
		<jacoco:coverage destfile="build/jacoco.exec">
			<junit fork="yes"
					haltonerror="true" haltonfailure="true"
					showoutput="true" printsummary="true">
				<formatter type="brief" usefile="false" />
				<formatter type="xml" />
				<classpath>
					<pathelement location="build/classes/src" />
					<pathelement location="build/classes/testsrc" />
					<pathelement location="lib/slf4j-api.jar" />
					<pathelement location="lib/logback-core.jar" />
					<pathelement location="lib/logback-classic.jar" />
					<pathelement location="lib/junit.jar" />
					<pathelement location="lib/cpsuite.jar" />
					<pathelement location="lib/easymock.jar" />
					<pathelement location="lib/cglib-nodep.jar" />
				</classpath>
				<sysproperty key="java.io.tmpdir" value="${basedir}/build/jacocotesttmpdir" />
				<test name="com.exedio.cope.util.AllTests" todir="build/jacocotestresults" outfile="cope-util-@{name}" />
				<assertions><enable/></assertions>
			</junit>
		</jacoco:coverage>
	</target>


	<target name="build" depends="compile, test, jar, api" />
	<target name="all" depends="build, jar.src, findbugs, jacoco" />

	<target name="jenkins" depends="all">
		<copy todir="${basedir}/build/success">
			<fileset file="${basedir}/build/exedio-cope-util.jar" />
			<fileset file="${basedir}/build/exedio-cope-util-src.zip" />
			<fileset file="${basedir}/exedio-cope-util-log.txt" />
		</copy>
		<copy file="ivy.xml" tofile="build/success/ivy.xml" overwrite="true">
			<filterset>
				<filter token="BUILD_REVISION" value="${build.revision}" />
			</filterset>
		</copy>
	</target>

	<target name="licenseheaders" description="Updates the license headers in the source files.">
		<loadfile property="javaheader" srcFile="javaheader.txt"/>
		<replaceregexp match="(/\*.*\*/.*)??^package " flags="sm" replace="${javaheader}${line.separator}package ">
			<fileset dir=".">
				<include name="**/*.java" />
			</fileset>
		</replaceregexp>
	</target>

</project>
